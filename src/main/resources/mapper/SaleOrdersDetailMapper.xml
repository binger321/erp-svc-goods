<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binger.goods.dao.SaleOrdersDetailMapper">
  <resultMap id="BaseResultMap" type="com.binger.goods.domain.SaleOrdersDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_sale_id" jdbcType="INTEGER" property="orderSaleId" />
    <result column="order_sale_code" jdbcType="VARCHAR" property="orderSaleCode" />
    <result column="orders_sale_detail_code" jdbcType="VARCHAR" property="ordersSaleDetailCode" />
    <result column="seller_sku" jdbcType="VARCHAR" property="sellerSku" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="sku_id" jdbcType="INTEGER" property="skuId" />
    <result column="goods_img_id" jdbcType="INTEGER" property="goodsImgId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="weight" jdbcType="DECIMAL" property="weight" />
    <result column="local_price" jdbcType="DECIMAL" property="localPrice" />
    <result column="local_amount" jdbcType="DECIMAL" property="localAmount" />
    <result column="expense" jdbcType="DECIMAL" property="expense" />
    <result column="is_gift" jdbcType="BIT" property="isGift" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="cost_price" jdbcType="DECIMAL" property="costPrice" />
    <result column="is_out_of_stock" jdbcType="BIT" property="isOutOfStock" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_sale_id, order_sale_code, orders_sale_detail_code, seller_sku, goods_id, 
    sku_id, goods_img_id, quantity, weight, local_price, local_amount, expense, is_gift, 
    remark, cost_price, is_out_of_stock, status, insert_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.binger.goods.domain.SaleOrdersDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sale_orders_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sale_orders_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sale_orders_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.binger.goods.domain.SaleOrdersDetailExample">
    delete from sale_orders_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.binger.goods.domain.SaleOrdersDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sale_orders_detail (order_sale_id, order_sale_code, orders_sale_detail_code, 
      seller_sku, goods_id, sku_id, 
      goods_img_id, quantity, weight, 
      local_price, local_amount, expense, 
      is_gift, remark, cost_price, 
      is_out_of_stock, status, insert_time, 
      update_time)
    values (#{orderSaleId,jdbcType=INTEGER}, #{orderSaleCode,jdbcType=VARCHAR}, #{ordersSaleDetailCode,jdbcType=VARCHAR}, 
      #{sellerSku,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, #{skuId,jdbcType=INTEGER}, 
      #{goodsImgId,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, #{weight,jdbcType=DECIMAL}, 
      #{localPrice,jdbcType=DECIMAL}, #{localAmount,jdbcType=DECIMAL}, #{expense,jdbcType=DECIMAL}, 
      #{isGift,jdbcType=BIT}, #{remark,jdbcType=VARCHAR}, #{costPrice,jdbcType=DECIMAL}, 
      #{isOutOfStock,jdbcType=BIT}, #{status,jdbcType=BIT}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.binger.goods.domain.SaleOrdersDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sale_orders_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderSaleId != null">
        order_sale_id,
      </if>
      <if test="orderSaleCode != null">
        order_sale_code,
      </if>
      <if test="ordersSaleDetailCode != null">
        orders_sale_detail_code,
      </if>
      <if test="sellerSku != null">
        seller_sku,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="goodsImgId != null">
        goods_img_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="localPrice != null">
        local_price,
      </if>
      <if test="localAmount != null">
        local_amount,
      </if>
      <if test="expense != null">
        expense,
      </if>
      <if test="isGift != null">
        is_gift,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="costPrice != null">
        cost_price,
      </if>
      <if test="isOutOfStock != null">
        is_out_of_stock,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderSaleId != null">
        #{orderSaleId,jdbcType=INTEGER},
      </if>
      <if test="orderSaleCode != null">
        #{orderSaleCode,jdbcType=VARCHAR},
      </if>
      <if test="ordersSaleDetailCode != null">
        #{ordersSaleDetailCode,jdbcType=VARCHAR},
      </if>
      <if test="sellerSku != null">
        #{sellerSku,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="goodsImgId != null">
        #{goodsImgId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="localPrice != null">
        #{localPrice,jdbcType=DECIMAL},
      </if>
      <if test="localAmount != null">
        #{localAmount,jdbcType=DECIMAL},
      </if>
      <if test="expense != null">
        #{expense,jdbcType=DECIMAL},
      </if>
      <if test="isGift != null">
        #{isGift,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="costPrice != null">
        #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="isOutOfStock != null">
        #{isOutOfStock,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.binger.goods.domain.SaleOrdersDetailExample" resultType="java.lang.Long">
    select count(*) from sale_orders_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sale_orders_detail
    <set>
      <if test="record.insertTime != null">
        <if test="record.insertTime.toString() == 'Thu Jan 01 08:00:00 CST 1970'">
          insert_time= null,
        </if>
        <if test="record.insertTime.toString() != 'Thu Jan 01 08:00:00 CST 1970'">
          insert_time= #{record.insertTime,jdbcType=TIMESTAMP},
        </if>
      </if>
      <if test="record.updateTime != null">
        <if test="record.updateTime.toString() == 'Thu Jan 01 08:00:00 CST 1970'">
          update_time= null,
        </if>
        <if test="record.updateTime.toString() != 'Thu Jan 01 08:00:00 CST 1970'">
          update_time= #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
      </if>
      <if test="record.orderSaleId != null">
        <if test="record.orderSaleId == -99999">
          order_sale_id= null,
        </if>
        <if test="record.orderSaleId != -99999">
          order_sale_id= #{record.orderSaleId,jdbcType=INTEGER},
        </if>
      </if>
      <if test="record.goodsId != null">
        <if test="record.goodsId == -99999">
          goods_id= null,
        </if>
        <if test="record.goodsId != -99999">
          goods_id= #{record.goodsId,jdbcType=INTEGER},
        </if>
      </if>
      <if test="record.skuId != null">
        <if test="record.skuId == -99999">
          sku_id= null,
        </if>
        <if test="record.skuId != -99999">
          sku_id= #{record.skuId,jdbcType=INTEGER},
        </if>
      </if>
      <if test="record.goodsImgId != null">
        <if test="record.goodsImgId == -99999">
          goods_img_id= null,
        </if>
        <if test="record.goodsImgId != -99999">
          goods_img_id= #{record.goodsImgId,jdbcType=INTEGER},
        </if>
      </if>
      <if test="record.quantity != null">
        <if test="record.quantity == -99999">
          quantity= null,
        </if>
        <if test="record.quantity != -99999">
          quantity= #{record.quantity,jdbcType=INTEGER},
        </if>
      </if>
      <if test="record.weight != null">
        <if test="record.weight == -99999">
          weight= null,
        </if>
        <if test="record.weight != -99999">
          weight= #{record.weight,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="record.localPrice != null">
        <if test="record.localPrice == -99999">
          local_price= null,
        </if>
        <if test="record.localPrice != -99999">
          local_price= #{record.localPrice,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="record.localAmount != null">
        <if test="record.localAmount == -99999">
          local_amount= null,
        </if>
        <if test="record.localAmount != -99999">
          local_amount= #{record.localAmount,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="record.expense != null">
        <if test="record.expense == -99999">
          expense= null,
        </if>
        <if test="record.expense != -99999">
          expense= #{record.expense,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="record.costPrice != null">
        <if test="record.costPrice == -99999">
          cost_price= null,
        </if>
        <if test="record.costPrice != -99999">
          cost_price= #{record.costPrice,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="record.orderSaleCode != null">
        <if test="record.orderSaleCode == 'erpsetnull'">
          order_sale_code= null,
        </if>
        <if test="record.orderSaleCode != 'erpsetnull'">
          order_sale_code= #{record.orderSaleCode,jdbcType=VARCHAR},
        </if>
      </if>
      <if test="record.ordersSaleDetailCode != null">
        <if test="record.ordersSaleDetailCode == 'erpsetnull'">
          orders_sale_detail_code= null,
        </if>
        <if test="record.ordersSaleDetailCode != 'erpsetnull'">
          orders_sale_detail_code= #{record.ordersSaleDetailCode,jdbcType=VARCHAR},
        </if>
      </if>
      <if test="record.sellerSku != null">
        <if test="record.sellerSku == 'erpsetnull'">
          seller_sku= null,
        </if>
        <if test="record.sellerSku != 'erpsetnull'">
          seller_sku= #{record.sellerSku,jdbcType=VARCHAR},
        </if>
      </if>
      <if test="record.remark != null">
        <if test="record.remark == 'erpsetnull'">
          remark= null,
        </if>
        <if test="record.remark != 'erpsetnull'">
          remark= #{record.remark,jdbcType=VARCHAR},
        </if>
      </if>
      <if test="record.isGift != null">
        is_gift= #{record.isGift,jdbcType=BIT},
      </if>
      <if test="record.isOutOfStock != null">
        is_out_of_stock= #{record.isOutOfStock,jdbcType=BIT},
      </if>
      <if test="record.status != null">
        status= #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sale_orders_detail
    set id = #{record.id,jdbcType=INTEGER},
      order_sale_id = #{record.orderSaleId,jdbcType=INTEGER},
      order_sale_code = #{record.orderSaleCode,jdbcType=VARCHAR},
      orders_sale_detail_code = #{record.ordersSaleDetailCode,jdbcType=VARCHAR},
      seller_sku = #{record.sellerSku,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      sku_id = #{record.skuId,jdbcType=INTEGER},
      goods_img_id = #{record.goodsImgId,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=DECIMAL},
      local_price = #{record.localPrice,jdbcType=DECIMAL},
      local_amount = #{record.localAmount,jdbcType=DECIMAL},
      expense = #{record.expense,jdbcType=DECIMAL},
      is_gift = #{record.isGift,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      cost_price = #{record.costPrice,jdbcType=DECIMAL},
      is_out_of_stock = #{record.isOutOfStock,jdbcType=BIT},
      status = #{record.status,jdbcType=BIT},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.binger.goods.domain.SaleOrdersDetail">
    update sale_orders_detail
    <set>
      <if test="insertTime != null">
        <if test="insertTime.toString() == 'Thu Jan 01 08:00:00 CST 1970'">
          insert_time= null,
        </if>
        <if test="insertTime.toString() != 'Thu Jan 01 08:00:00 CST 1970'">
          insert_time= #{insertTime,jdbcType=TIMESTAMP},
        </if>
      </if>
      <if test="updateTime != null">
        <if test="updateTime.toString() == 'Thu Jan 01 08:00:00 CST 1970'">
          update_time= null,
        </if>
        <if test="updateTime.toString() != 'Thu Jan 01 08:00:00 CST 1970'">
          update_time= #{updateTime,jdbcType=TIMESTAMP},
        </if>
      </if>
      <if test="orderSaleId != null">
        <if test="orderSaleId == -99999">
          order_sale_id= null,
        </if>
        <if test="orderSaleId != -99999">
          order_sale_id= #{orderSaleId,jdbcType=INTEGER},
        </if>
      </if>
      <if test="goodsId != null">
        <if test="goodsId == -99999">
          goods_id= null,
        </if>
        <if test="goodsId != -99999">
          goods_id= #{goodsId,jdbcType=INTEGER},
        </if>
      </if>
      <if test="skuId != null">
        <if test="skuId == -99999">
          sku_id= null,
        </if>
        <if test="skuId != -99999">
          sku_id= #{skuId,jdbcType=INTEGER},
        </if>
      </if>
      <if test="goodsImgId != null">
        <if test="goodsImgId == -99999">
          goods_img_id= null,
        </if>
        <if test="goodsImgId != -99999">
          goods_img_id= #{goodsImgId,jdbcType=INTEGER},
        </if>
      </if>
      <if test="quantity != null">
        <if test="quantity == -99999">
          quantity= null,
        </if>
        <if test="quantity != -99999">
          quantity= #{quantity,jdbcType=INTEGER},
        </if>
      </if>
      <if test="weight != null">
        <if test="weight == -99999">
          weight= null,
        </if>
        <if test="weight != -99999">
          weight= #{weight,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="localPrice != null">
        <if test="localPrice == -99999">
          local_price= null,
        </if>
        <if test="localPrice != -99999">
          local_price= #{localPrice,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="localAmount != null">
        <if test="localAmount == -99999">
          local_amount= null,
        </if>
        <if test="localAmount != -99999">
          local_amount= #{localAmount,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="expense != null">
        <if test="expense == -99999">
          expense= null,
        </if>
        <if test="expense != -99999">
          expense= #{expense,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="costPrice != null">
        <if test="costPrice == -99999">
          cost_price= null,
        </if>
        <if test="costPrice != -99999">
          cost_price= #{costPrice,jdbcType=DECIMAL},
        </if>
      </if>
      <if test="orderSaleCode != null">
        <if test="orderSaleCode == 'erpsetnull'">
          order_sale_code= null,
        </if>
        <if test="orderSaleCode != 'erpsetnull'">
          order_sale_code= #{orderSaleCode,jdbcType=VARCHAR},
        </if>
      </if>
      <if test="ordersSaleDetailCode != null">
        <if test="ordersSaleDetailCode == 'erpsetnull'">
          orders_sale_detail_code= null,
        </if>
        <if test="ordersSaleDetailCode != 'erpsetnull'">
          orders_sale_detail_code= #{ordersSaleDetailCode,jdbcType=VARCHAR},
        </if>
      </if>
      <if test="sellerSku != null">
        <if test="sellerSku == 'erpsetnull'">
          seller_sku= null,
        </if>
        <if test="sellerSku != 'erpsetnull'">
          seller_sku= #{sellerSku,jdbcType=VARCHAR},
        </if>
      </if>
      <if test="remark != null">
        <if test="remark == 'erpsetnull'">
          remark= null,
        </if>
        <if test="remark != 'erpsetnull'">
          remark= #{remark,jdbcType=VARCHAR},
        </if>
      </if>
      <if test="isGift != null">
        is_gift= #{isGift,jdbcType=BIT},
      </if>
      <if test="isOutOfStock != null">
        is_out_of_stock= #{isOutOfStock,jdbcType=BIT},
      </if>
      <if test="status != null">
        status= #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binger.goods.domain.SaleOrdersDetail">
    update sale_orders_detail
    set order_sale_id = #{orderSaleId,jdbcType=INTEGER},
      order_sale_code = #{orderSaleCode,jdbcType=VARCHAR},
      orders_sale_detail_code = #{ordersSaleDetailCode,jdbcType=VARCHAR},
      seller_sku = #{sellerSku,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      sku_id = #{skuId,jdbcType=INTEGER},
      goods_img_id = #{goodsImgId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      weight = #{weight,jdbcType=DECIMAL},
      local_price = #{localPrice,jdbcType=DECIMAL},
      local_amount = #{localAmount,jdbcType=DECIMAL},
      expense = #{expense,jdbcType=DECIMAL},
      is_gift = #{isGift,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      cost_price = #{costPrice,jdbcType=DECIMAL},
      is_out_of_stock = #{isOutOfStock,jdbcType=BIT},
      status = #{status,jdbcType=BIT},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithColSelected" parameterType="com.binger.goods.domain.SaleOrdersDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    ${selectiveField.toString()} 
    from sale_orders_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKeyWithColSelected" resultMap="BaseResultMap">
    select 
    ${selectiveField.toString()} 
    from sale_orders_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
</mapper>